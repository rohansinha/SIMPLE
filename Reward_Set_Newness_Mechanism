 # defining sets 

 set 1 : Top 50% of ur playlist 
 set 2 : next 50% of heard  
 set 3 : unheard or New songs  : Till t Reward has been 0 
 set 4 : Rest : The ones skipped 

 Set another tag to the song classifier : Heard or Unheard

Reason : No decrementing of points.. Therefore problem in normalization

	Define tags :
		if tag = heard and reward is 0 -> set 4
		else if tag = heard and reward> 0 ->set 1 or 2
		else Newness i.e Set3 

		Sexy Bitch = {index , tag: heard or unheard, set: 1/2/3/4 } # Song dictionary format

		
		-> Shuffle groups of 15 songs ! 

		define rules of set 2 and set 1
			->  Grow with ln function till it reaches the avg of the score in set 1 
			-> 	when songs in set 2 exceeds the reward of ne song in set1 : swap 
			-> Basicll all songs below he aveage of set 1 will increase by the 'ln' function till it crosses th average of set 1. the usage of ln begins when the lowest value in set 1 crosses a reward of 50  

		if song belongs to set 3 :
			if set 2 and set 1 is NULL:
				use normal rewards for the action taken

		# approximation ->
		if the least value in set 1 is 50 greater than the set 3 then trigger the " ln " function

****************************************************************************************************************************
What to do once we obtain the flow pattern matrix and song policy matrix:-
	1. Let the user choose ne song 
	2. Update the reward matrix[i.e update that row and it updates the set-transition]
	3. From that row play the most probable song 
	4. Mark the song played at 1 "Played" so that it doesnt play again
	
Our song policy is used to create our sets and it decides for what songs below the "Threshold"(avg) will jump by the ln function!

Doubt :When do we shuffle the top 15% songs and all those?
possible ans:  do we shuffle the top rewarded songs in that song row ? as in we consider the top 20% songs in that row and choose ne one of them..Random?
